#!/usr/bin/python3

# Copyright Â© 2010-2019 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

'''
A wrapper over sbuild that allow it to be run with another user (named
"sbuild") via sudo.
'''

import glob
import os
import shlex
import shutil
import subprocess as ipc
import sys
import tempfile

lambda: (yield from [])  # Python >= 3.3 is required

cwd = os.getcwd()
sbuild_args = ['sudo', '-u', 'sbuild', '--', '/usr/bin/sbuild']
tmpdir = tempfile.mkdtemp(prefix='sbuild.')
try:
    ipc.check_call(['setfacl', '-m', 'u:sbuild:rwx', '--', tmpdir])
    for arg in sys.argv[1:]:
        if arg.endswith('.dsc'):
            new_arg = os.path.basename(arg)
            ipc.check_call(['dcmd', 'cp', '-v', '--', arg, tmpdir])
            arg = new_arg
        sbuild_args += [arg]
    os.chdir(tmpdir)
    for filename in glob.iglob('*'):
        os.chmod(filename, 0o644)
    ipc.check_call(['setfacl', '-m', 'u:sbuild:rw', '--'] + glob.glob('*'))
    ipc.check_call(['ls', '-lR'])
    try:
        ipc.check_call(sbuild_args)
    finally:
        ipc.check_call(['cp', '-v', '-L', '-f', '-t', cwd, '--'] + glob.glob('*'))
except ipc.CalledProcessError as ex:
    print('E:', ' '.join(map(shlex.quote, ex.cmd)))
    sys.exit(1)
finally:
    shutil.rmtree(tmpdir)

# vim:ts=4 sts=4 sw=4 et
