#!/usr/bin/python3

# Copyright Â© 2011-2014 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

import argparse
import os
import pwd
import sys
import urllib.parse
import xmlrpc.client

class PasteError(RuntimeError):
    pass

def get_default_username():
    return pwd.getpwuid(os.getuid()).pw_name

class PasteServer(xmlrpc.client.ServerProxy):

    def call(self, method, *args):
        response = getattr(self.paste, method)(*args)
        if response['rc'] != 0:
            raise PasteError(response['statusmessage'])
        return response

def do_get_languages(server, options):
    response = server.call('getLanguages')
    for language in sorted(response['langs']):
        print(language)

def do_create_paste(server, options):
    text = options.text
    if text is None:
        text = sys.stdin.read()
    response = server.call('addPaste', text, options.username, options.expire, options.language, int(bool(options.hidden)))
    base_url = urllib.parse.urljoin(options.url, response['base_url'])
    path = str(response['id'])
    if response['hidden']:
        path = 'hidden/{}'.format(path)
    print(urllib.parse.urljoin(base_url, path))

def main():
    default_server = 'https://paste.debian.net/server.pl'
    # XXX Caveat: while the Python XML-RPC client can talk to the paste server
    # over HTTPS, it does not verify the server's TLS certificate:
    # https://bugs.python.org/issue13856
    # It's a shame, but it's still better than talking to the server over HTTP.
    default_username = get_default_username()
    default_expire = 2 * 24 * 60 * 60
    parser = argparse.ArgumentParser()
    parser.add_argument('-S', '--server', metavar='URL', dest='url', default=default_server, help='XML-RPC server (default: {})'.format(default_server))
    parser.add_argument('-u', '--username', default=default_username, help='name of the submitter (default: {})'.format(default_username))
    parser.add_argument('-l', '--language', default='text', help='highlighting language')
    parser.add_argument('-e', '--expire', type=int, default=default_expire, help='time in seconds from now when the entry should expire (default: {}, i.e. {}h)'.format(default_expire, default_expire // (60 * 60)))
    parser.add_argument('--hidden', action='store_true', help='hide from frontpage')
    parser.add_argument('-L', '--list-languages', action='store_true', help='list all supported highlighting languages')
    parser.add_argument('text', metavar='TEXT', nargs='?', help='text to paste (default: read text from stdin)')
    options = parser.parse_args()
    server = PasteServer(options.url)
    if options.list_languages:
        do_get_languages(server, options)
    else:
        do_create_paste(server, options)

if __name__ == '__main__':
    main()

# vim:ts=4 sts=4 sw=4 et
