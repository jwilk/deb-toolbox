#!/usr/bin/python
# encoding=UTF-8

# Copyright Â© 2011 Jakub Wilk <jwilk@debian.org>

# Redistribution and use in source and compiled forms, with or without
# modification, are permitted under any circumstances. No warranty.

import getpass
import httplib
import netrc
import os
import re
import shutil
import socket
import ssl
import sys
import tempfile
import urllib

class VerifiedHTTPSConnection(httplib.HTTPSConnection):
    def connect(self):
        sock = socket.create_connection((self.host, self.port), self.timeout)
        if self._tunnel_host:
            self.sock = sock
            self._tunnel()
        self.sock = ssl.wrap_socket(sock,
            self.key_file,
            self.cert_file,
            cert_reqs=ssl.CERT_REQUIRED,
            ca_certs='/usr/share/ca-certificates/spi-inc.org/spi-cacert-2008.crt',
        )
        ssl.match_hostname(self.sock.getpeercert(), self.host)

httplib.HTTPS._connection_class = VerifiedHTTPSConnection

if __name__ == '__main__':

    try:
        netrc_user, _, netrc_password = netrc.netrc().authenticators('wiki.debian.org')
    except TypeError:
        print >>sys.stderr, 'No entry for wiki.debian.org found in ~/.netrc'
        sys.exit(1)

    def get_user(moinurl, user=netrc_user):
        return user

    def get_password(user, password=netrc_password):
        return password

    for i, arg in enumerate(sys.argv):
        if i == 0:
            continue
        if arg.startswith('http:'):
            sys.argv[i] = 'https:' + arg[5:]
        elif len(arg) > 0 and (arg[0] == '/' or arg[0].isalpha()):
            sys.argv[i] = urllib.basejoin('https://wiki.debian.org/', arg)
    tmpdir = tempfile.mkdtemp(prefix='wiki.debian.org.')
    try:
        os.symlink('/usr/bin/editmoin', os.path.join(tmpdir, 'editmoin.py'))
        sys.path[0] = tmpdir
        import editmoin
        editmoin.get_user = get_user
        getpass.getpass = get_password
        editmoin.main()
    finally:
        shutil.rmtree(tmpdir)

# vim:ts=4 sw=4 et
