#!/usr/bin/python
# encoding=UTF-8

# Copyright © 2011-2016 Jakub Wilk <jwilk@debian.org>

# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED “AS IS” AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

import getpass
import errno
import httplib
import netrc
import os
import shutil
import socket
import ssl
import sys
import tempfile
import urllib

try:
    import readline
except ImportError:
    pass
else:
    del readline

class VerifiedHTTPSConnection(httplib.HTTPSConnection):
    def connect(self):
        sock = socket.create_connection((self.host, self.port), self.timeout)
        if self._tunnel_host:
            self.sock = sock
            self._tunnel()
        self.sock = ssl.wrap_socket(sock,
            self.key_file,
            self.cert_file,
            cert_reqs=ssl.CERT_REQUIRED,
            ca_certs='/usr/share/ca-certificates/mozilla/DST_Root_CA_X3.crt',
        )
        ssl.match_hostname(self.sock.getpeercert(), self.host)

httplib.HTTPS._connection_class = VerifiedHTTPSConnection

if __name__ == '__main__':

    try:
        try:
            netrc_user, _, netrc_password = netrc.netrc().authenticators('wiki.debian.org')
        except IOError as exc:
            if exc.errno == errno.ENOENT:
                raise TypeError
        else:
            use_netrc = True
    except TypeError:
        use_netrc = False

    if use_netrc:
        def get_user(moinurl, user=netrc_user):
            return user
        def get_password(user, password=netrc_password):
            return password
    else:
        def get_user(moinurl):
            return raw_input('User: ')

    for i, arg in enumerate(sys.argv):
        if i == 0:
            continue
        if arg.startswith('http:'):
            sys.argv[i] = 'https:' + arg[5:]
        elif len(arg) > 0 and (arg[0] == '/' or arg[0].isalpha()):
            sys.argv[i] = urllib.basejoin('https://wiki.debian.org/', arg)
    tmpdir = tempfile.mkdtemp(prefix='wiki.debian.org.')
    try:
        os.symlink('/usr/bin/editmoin', os.path.join(tmpdir, 'editmoin.py'))
        sys.path[0] = tmpdir
        import editmoin
        editmoin.get_user = get_user
        if use_netrc:
            getpass.getpass = get_password
        editmoin.main()
    finally:
        shutil.rmtree(tmpdir)

# vim:ts=4 sts=4 sw=4 et
